{"ast":null,"code":"import _defineProperty from \"/Users/sarfarazkasmani/Desktop/photoframe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { database } from '../database/config';\nexport function startAddingPhoto(photo) {\n  return function (dispatch) {\n    return database.ref('allPhotos').update(_defineProperty({}, photo.id, photo)).then(function () {\n      dispatch(addPhoto(photo));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function startLoadingPhoto() {\n  return function (dispatch) {\n    return database.ref('allPhotos').once('value').then(function (snapshot) {\n      var allPhotos = [];\n      snapshot.forEach(function (childSnapshot) {\n        allPhotos.push(childSnapshot.val());\n      });\n      dispatch(loadPhoto(allPhotos));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function startRemovingPhoto(index, id) {\n  return function (dispatch) {\n    return database.ref(\"allPhotos/\".concat(id)).remove().then(function () {\n      dispatch(removePhoto(index));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function startAddingComment(comment, photoId) {\n  return function (dispatch) {\n    return database.ref('comments/' + photoId).push(comment).then(function () {\n      dispatch(addComment(comment, photoId));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n}\nexport function startLoadingCooments() {\n  return function (dispatch) {\n    return database.ref('comments').once('value').then(function (snapshot) {\n      var comments = {};\n      snapshot.forEach(function (childSnapshot) {\n        comments[childSnapshot.key] = Object.values(childSnapshot.val());\n      });\n      dispatch(loadComments(comments));\n    });\n  };\n}\nexport function loadComments(comments) {\n  return {\n    type: 'LOAD_COMMENTS',\n    comments: comments\n  };\n}\nexport function removePhoto(index) {\n  return {\n    type: 'REMOVE_PHOTO',\n    index: index\n  };\n}\nexport function addPhoto(photo) {\n  return {\n    type: 'ADD_PHOTO',\n    photo: photo\n  };\n}\nexport function addComment(comment, photoId) {\n  return {\n    type: 'ADD_COMMENT',\n    comment: comment,\n    photoId: photoId\n  };\n}\nexport function loadPhoto(allPhotos) {\n  return {\n    type: 'LOAD_PHOTOS',\n    allPhotos: allPhotos\n  };\n}","map":{"version":3,"sources":["/Users/sarfarazkasmani/Desktop/photoframe/src/redux/actions.js"],"names":["database","startAddingPhoto","photo","dispatch","ref","update","id","then","addPhoto","catch","error","console","log","startLoadingPhoto","once","snapshot","allPhotos","forEach","childSnapshot","push","val","loadPhoto","startRemovingPhoto","index","remove","removePhoto","startAddingComment","comment","photoId","addComment","startLoadingCooments","comments","key","Object","values","loadComments","type"],"mappings":"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","sourcesContent":["import {database} from '../database/config'\n\n\nexport function startAddingPhoto(photo) {\n    return(dispatch) => {\n        return database.ref('allPhotos').update({[photo.id] : photo}).then(() => {\n            dispatch(addPhoto(photo))\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n}\n\nexport function startLoadingPhoto() {\n    return (dispatch) => {\n        return database.ref('allPhotos').once('value').then((snapshot) => {\n            let allPhotos = []\n            snapshot.forEach((childSnapshot) => {\n                allPhotos.push(childSnapshot.val())\n            })\n            dispatch(loadPhoto(allPhotos))\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n}\n\nexport function startRemovingPhoto(index, id) {\n    return (dispatch) => {\n        return database.ref(`allPhotos/${id}`).remove().then(() => {\n            dispatch(removePhoto(index))\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n}\n\nexport function startAddingComment(comment, photoId) {\n    return (dispatch) => {\n        return database.ref('comments/'+photoId).push(comment).then(() => {\n            dispatch(addComment(comment, photoId))\n        }).catch((error) => {\n            console.log(error)\n        })\n    }\n}\n\nexport function startLoadingCooments() {\n    return (dispatch) => {\n        return database.ref('comments').once('value').then((snapshot) => {\n            let comments = {}\n            snapshot.forEach((childSnapshot) => {\n                comments [childSnapshot.key] = Object.values(childSnapshot.val())\n            })\n            dispatch(loadComments(comments))\n        })\n    }\n}\n\nexport function loadComments(comments) {\n    return {\n        type : 'LOAD_COMMENTS',\n        comments\n    }\n}\n\nexport function removePhoto(index) {\n    return {\n        type: 'REMOVE_PHOTO',\n        index\n    }\n}\n\nexport function addPhoto(photo) {\n    return {\n        type: 'ADD_PHOTO',\n        photo\n    }\n}\n\nexport function addComment(comment, photoId) {\n    return {\n        type: 'ADD_COMMENT',\n        comment,\n        photoId\n    }\n}\n\nexport function loadPhoto(allPhotos) {\n    return {\n        type: 'LOAD_PHOTOS',\n        allPhotos\n    }\n}"]},"metadata":{},"sourceType":"module"}